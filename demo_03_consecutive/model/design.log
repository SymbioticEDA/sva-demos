
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite -- Symbiotic EDA Edition [20200402A ] |
 |                                                                            |
 |  Copyright (C) 2012 - 2020 Symbiotic GmbH                                  |
 |                                                                            |
 |  Licensed to: Symbiotic EDA                                                |
 |  Licensee contact: Symbiotic Support <support@symbioticeda.com>            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+1706 (git sha1 c903246, clang 3.8.0-2ubuntu4 -fPIC -Os)

[license] Signature verified.
[license] License will expire in 41 days.
[license] License is valid for MAC address f8:75:a4:36:11:9d.

-- Executing script file `../model/design.ys' --

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar20_SW_Release, released at Tue Mar 31 16:31:28 2020.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'seq.sv'

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar20_SW_Release, released at Tue Mar 31 16:31:28 2020.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'demo_03_consecutive.sv'

3. Executing PREP pass.

3.1. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] demo_03_consecutive.sv:1: compiling module 'demo_03_consecutive'
VERIFIC-INFO [VERI-1018] seq.sv:1: compiling module 'seq(seq="-_______-___________")'
VERIFIC-WARNING [VERI-1209] seq.sv:11: expression size 1024 truncated to fit in target size 8
VERIFIC-WARNING [VERI-1330] demo_03_consecutive.sv:5: actual bit length 1 differs from formal bit length 4 for port 'dout'
VERIFIC-INFO [VERI-1018] seq.sv:1: compiling module 'seq(seq="_-____-____-________")'
VERIFIC-WARNING [VERI-1209] seq.sv:11: expression size 1024 truncated to fit in target size 8
VERIFIC-WARNING [VERI-1330] demo_03_consecutive.sv:6: actual bit length 1 differs from formal bit length 4 for port 'dout'
VERIFIC-INFO [VERI-1018] seq.sv:1: compiling module 'seq(seq="__--___-_____--_____")'
VERIFIC-WARNING [VERI-1209] seq.sv:11: expression size 1024 truncated to fit in target size 8
VERIFIC-WARNING [VERI-1330] demo_03_consecutive.sv:7: actual bit length 1 differs from formal bit length 4 for port 'dout'
VERIFIC-INFO [VERI-1018] seq.sv:1: compiling module 'seq(seq="____-__________-____")'
VERIFIC-WARNING [VERI-1209] seq.sv:11: expression size 1024 truncated to fit in target size 8
VERIFIC-WARNING [VERI-1330] demo_03_consecutive.sv:8: actual bit length 1 differs from formal bit length 4 for port 'dout'
Importing module demo_03_consecutive.
Importing module seq(seq="-_______-___________").
Importing module seq(seq="_-____-____-________").
Importing module seq(seq="__--___-_____--_____").
Importing module seq(seq="____-__________-____").

3.1.1. Analyzing design hierarchy..
Top module:  \demo_03_consecutive
Used module:     \seq(seq="____-__________-____")
Used module:     \seq(seq="__--___-_____--_____")
Used module:     \seq(seq="_-____-____-________")
Used module:     \seq(seq="-_______-___________")

3.1.2. Analyzing design hierarchy..
Top module:  \demo_03_consecutive
Used module:     \seq(seq="____-__________-____")
Used module:     \seq(seq="__--___-_____--_____")
Used module:     \seq(seq="_-____-____-________")
Used module:     \seq(seq="-_______-___________")
Removed 0 unused modules.
Module demo_03_consecutive directly or indirectly contains formal properties -> setting "keep" attribute.
Warning: Resizing cell port demo_03_consecutive.seq_c.dout from 1 bits to 4 bits.
Warning: Resizing cell port demo_03_consecutive.seq_b.dout from 1 bits to 4 bits.
Warning: Resizing cell port demo_03_consecutive.seq_a.dout from 1 bits to 4 bits.
Warning: Resizing cell port demo_03_consecutive.seq_r.dout from 1 bits to 4 bits.

3.2. Executing PROC pass (convert processes to netlists).

3.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

3.2.4. Executing PROC_INIT pass (extract init attributes).

3.2.5. Executing PROC_ARST pass (detect async resets in processes).

3.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

3.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).

3.2.8. Executing PROC_DFF pass (convert process syncs to FFs).

3.2.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module seq(seq="____-__________-____").
Optimizing module seq(seq="__--___-_____--_____").
Optimizing module seq(seq="_-____-____-________").
Optimizing module seq(seq="-_______-___________").
Optimizing module demo_03_consecutive.
<suppressed ~8 debug messages>

3.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \seq(seq="____-__________-____")..
Finding unused cells or wires in module \seq(seq="__--___-_____--_____")..
Finding unused cells or wires in module \seq(seq="_-____-____-________")..
Finding unused cells or wires in module \seq(seq="-_______-___________")..
Finding unused cells or wires in module \demo_03_consecutive..
Removed 0 unused cells and 40 unused wires.
<suppressed ~5 debug messages>

3.5. Executing CHECK pass (checking for obvious problems).
checking module demo_03_consecutive..
checking module seq(seq="-_______-___________")..
checking module seq(seq="_-____-____-________")..
checking module seq(seq="__--___-_____--_____")..
checking module seq(seq="____-__________-____")..
found and reported 0 problems.

3.6. Executing OPT pass (performing simple optimizations).

3.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo_03_consecutive.
Optimizing module seq(seq="-_______-___________").
Optimizing module seq(seq="_-____-____-________").
Optimizing module seq(seq="__--___-_____--_____").
Optimizing module seq(seq="____-__________-____").

3.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\demo_03_consecutive'.
Finding identical cells in module `\seq(seq="-_______-___________")'.
Finding identical cells in module `\seq(seq="_-____-____-________")'.
Finding identical cells in module `\seq(seq="__--___-_____--_____")'.
Finding identical cells in module `\seq(seq="____-__________-____")'.
Removed a total of 0 cells.

3.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \demo_03_consecutive..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \seq(seq="-_______-___________")..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \seq(seq="_-____-____-________")..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \seq(seq="__--___-_____--_____")..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \seq(seq="____-__________-____")..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

3.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \demo_03_consecutive.
  Optimizing cells in module \seq(seq="-_______-___________").
    New ctrl vector for $pmux cell $verific$Select_40$seq.sv:38$150: { $auto$opt_reduce.cc:134:opt_mux$413 $auto$opt_reduce.cc:134:opt_mux$411 }
    New ctrl vector for $pmux cell $verific$Select_42$seq.sv:38$151: $auto$opt_reduce.cc:134:opt_mux$415
    New ctrl vector for $pmux cell $verific$Select_46$seq.sv:38$152: { $auto$opt_reduce.cc:134:opt_mux$419 $auto$opt_reduce.cc:134:opt_mux$417 }
    New ctrl vector for $pmux cell $verific$Select_52$seq.sv:38$153: { $auto$opt_reduce.cc:134:opt_mux$423 $auto$opt_reduce.cc:134:opt_mux$421 }
    New ctrl vector for $pmux cell $verific$Select_58$seq.sv:38$154: { $auto$opt_reduce.cc:134:opt_mux$427 $auto$opt_reduce.cc:134:opt_mux$425 }
  Optimizing cells in module \seq(seq="-_______-___________").
  Optimizing cells in module \seq(seq="_-____-____-________").
    New ctrl vector for $pmux cell $verific$Select_40$seq.sv:38$233: { $auto$opt_reduce.cc:134:opt_mux$431 $auto$opt_reduce.cc:134:opt_mux$429 }
    New ctrl vector for $pmux cell $verific$Select_42$seq.sv:38$234: $auto$opt_reduce.cc:134:opt_mux$433
    New ctrl vector for $pmux cell $verific$Select_46$seq.sv:38$235: { $auto$opt_reduce.cc:134:opt_mux$437 $auto$opt_reduce.cc:134:opt_mux$435 }
    New ctrl vector for $pmux cell $verific$Select_52$seq.sv:38$236: { $auto$opt_reduce.cc:134:opt_mux$441 $auto$opt_reduce.cc:134:opt_mux$439 }
    New ctrl vector for $pmux cell $verific$Select_58$seq.sv:38$237: { $auto$opt_reduce.cc:134:opt_mux$445 $auto$opt_reduce.cc:134:opt_mux$443 }
  Optimizing cells in module \seq(seq="_-____-____-________").
  Optimizing cells in module \seq(seq="__--___-_____--_____").
    New ctrl vector for $pmux cell $verific$Select_40$seq.sv:38$316: { $auto$opt_reduce.cc:134:opt_mux$449 $auto$opt_reduce.cc:134:opt_mux$447 }
    New ctrl vector for $pmux cell $verific$Select_42$seq.sv:38$317: $auto$opt_reduce.cc:134:opt_mux$451
    New ctrl vector for $pmux cell $verific$Select_46$seq.sv:38$318: { $auto$opt_reduce.cc:134:opt_mux$455 $auto$opt_reduce.cc:134:opt_mux$453 }
    New ctrl vector for $pmux cell $verific$Select_52$seq.sv:38$319: { $auto$opt_reduce.cc:134:opt_mux$459 $auto$opt_reduce.cc:134:opt_mux$457 }
    New ctrl vector for $pmux cell $verific$Select_58$seq.sv:38$320: { $auto$opt_reduce.cc:134:opt_mux$463 $auto$opt_reduce.cc:134:opt_mux$461 }
  Optimizing cells in module \seq(seq="__--___-_____--_____").
  Optimizing cells in module \seq(seq="____-__________-____").
    New ctrl vector for $pmux cell $verific$Select_40$seq.sv:38$399: { $auto$opt_reduce.cc:134:opt_mux$467 $auto$opt_reduce.cc:134:opt_mux$465 }
    New ctrl vector for $pmux cell $verific$Select_42$seq.sv:38$400: $auto$opt_reduce.cc:134:opt_mux$469
    New ctrl vector for $pmux cell $verific$Select_46$seq.sv:38$401: { $auto$opt_reduce.cc:134:opt_mux$473 $auto$opt_reduce.cc:134:opt_mux$471 }
    New ctrl vector for $pmux cell $verific$Select_52$seq.sv:38$402: { $auto$opt_reduce.cc:134:opt_mux$477 $auto$opt_reduce.cc:134:opt_mux$475 }
    New ctrl vector for $pmux cell $verific$Select_58$seq.sv:38$403: { $auto$opt_reduce.cc:134:opt_mux$481 $auto$opt_reduce.cc:134:opt_mux$479 }
  Optimizing cells in module \seq(seq="____-__________-____").
Performed a total of 20 changes.

3.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\demo_03_consecutive'.
Finding identical cells in module `\seq(seq="-_______-___________")'.
<suppressed ~9 debug messages>
Finding identical cells in module `\seq(seq="_-____-____-________")'.
<suppressed ~9 debug messages>
Finding identical cells in module `\seq(seq="__--___-_____--_____")'.
<suppressed ~9 debug messages>
Finding identical cells in module `\seq(seq="____-__________-____")'.
<suppressed ~9 debug messages>
Removed a total of 12 cells.

3.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo_03_consecutive..
Finding unused cells or wires in module \seq(seq="-_______-___________")..
Finding unused cells or wires in module \seq(seq="_-____-____-________")..
Finding unused cells or wires in module \seq(seq="__--___-_____--_____")..
Finding unused cells or wires in module \seq(seq="____-__________-____")..
Removed 0 unused cells and 12 unused wires.
<suppressed ~4 debug messages>

3.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo_03_consecutive.
Optimizing module seq(seq="-_______-___________").
Optimizing module seq(seq="_-____-____-________").
Optimizing module seq(seq="__--___-_____--_____").
Optimizing module seq(seq="____-__________-____").

3.6.9. Rerunning OPT passes. (Maybe there is more to do..)

3.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \demo_03_consecutive..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \seq(seq="-_______-___________")..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \seq(seq="_-____-____-________")..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \seq(seq="__--___-_____--_____")..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \seq(seq="____-__________-____")..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

3.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \demo_03_consecutive.
  Optimizing cells in module \seq(seq="-_______-___________").
  Optimizing cells in module \seq(seq="_-____-____-________").
  Optimizing cells in module \seq(seq="__--___-_____--_____").
  Optimizing cells in module \seq(seq="____-__________-____").
Performed a total of 0 changes.

3.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\demo_03_consecutive'.
Finding identical cells in module `\seq(seq="-_______-___________")'.
Finding identical cells in module `\seq(seq="_-____-____-________")'.
Finding identical cells in module `\seq(seq="__--___-_____--_____")'.
Finding identical cells in module `\seq(seq="____-__________-____")'.
Removed a total of 0 cells.

3.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo_03_consecutive..
Finding unused cells or wires in module \seq(seq="-_______-___________")..
Finding unused cells or wires in module \seq(seq="_-____-____-________")..
Finding unused cells or wires in module \seq(seq="__--___-_____--_____")..
Finding unused cells or wires in module \seq(seq="____-__________-____")..

3.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo_03_consecutive.
Optimizing module seq(seq="-_______-___________").
Optimizing module seq(seq="_-____-____-________").
Optimizing module seq(seq="__--___-_____--_____").
Optimizing module seq(seq="____-__________-____").

3.6.16. Finished OPT passes. (There is nothing left to do.)

3.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell demo_03_consecutive.$verific$i5$demo_03_consecutive.sv:13$20 ($eq).
Removed top 27 bits (of 32) from port A of cell seq(seq="-_______-___________").$verific$sub_3$seq.sv:10$115 ($sub).
Removed top 3 bits (of 32) from port Y of cell seq(seq="-_______-___________").$verific$sub_3$seq.sv:10$115 ($sub).
Removed top 3 bits (of 32) from port B of cell seq(seq="-_______-___________").$verific$sub_3$seq.sv:10$115 ($sub).
Removed top 866 bits (of 1024) from port A of cell seq(seq="-_______-___________").$verific$shift_right_4$seq.sv:11$116 ($shr).
Removed top 1016 bits (of 1024) from port Y of cell seq(seq="-_______-___________").$verific$shift_right_4$seq.sv:11$116 ($shr).
Removed top 31 bits (of 32) from port B of cell seq(seq="-_______-___________").$verific$add_6$seq.sv:14$118 ($add).
Removed top 2 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_8$seq.sv:20$119 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_9$seq.sv:20$120 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_10$seq.sv:21$121 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_11$seq.sv:22$122 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_12$seq.sv:23$123 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_13$seq.sv:24$124 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_14$seq.sv:25$125 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_15$seq.sv:26$126 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_16$seq.sv:27$127 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_17$seq.sv:28$128 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_18$seq.sv:29$129 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_19$seq.sv:30$130 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_20$seq.sv:30$131 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_21$seq.sv:31$132 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_22$seq.sv:31$133 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_23$seq.sv:32$134 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_24$seq.sv:32$135 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_25$seq.sv:33$136 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_26$seq.sv:33$137 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_27$seq.sv:34$138 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_28$seq.sv:34$139 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_29$seq.sv:35$140 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_30$seq.sv:35$141 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_31$seq.sv:35$142 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_32$seq.sv:36$143 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_33$seq.sv:36$144 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_34$seq.sv:37$145 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="-_______-___________").$verific$equal_35$seq.sv:37$146 ($eq).
Removed top 3 bits (of 32) from wire seq(seq="-_______-___________").position.
Removed top 27 bits (of 32) from port A of cell seq(seq="_-____-____-________").$verific$sub_3$seq.sv:10$198 ($sub).
Removed top 3 bits (of 32) from port Y of cell seq(seq="_-____-____-________").$verific$sub_3$seq.sv:10$198 ($sub).
Removed top 3 bits (of 32) from port B of cell seq(seq="_-____-____-________").$verific$sub_3$seq.sv:10$198 ($sub).
Removed top 865 bits (of 1024) from port A of cell seq(seq="_-____-____-________").$verific$shift_right_4$seq.sv:11$199 ($shr).
Removed top 1016 bits (of 1024) from port Y of cell seq(seq="_-____-____-________").$verific$shift_right_4$seq.sv:11$199 ($shr).
Removed top 31 bits (of 32) from port B of cell seq(seq="_-____-____-________").$verific$add_6$seq.sv:14$201 ($add).
Removed top 2 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_8$seq.sv:20$202 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_9$seq.sv:20$203 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_10$seq.sv:21$204 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_11$seq.sv:22$205 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_12$seq.sv:23$206 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_13$seq.sv:24$207 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_14$seq.sv:25$208 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_15$seq.sv:26$209 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_16$seq.sv:27$210 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_17$seq.sv:28$211 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_18$seq.sv:29$212 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_19$seq.sv:30$213 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_20$seq.sv:30$214 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_21$seq.sv:31$215 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_22$seq.sv:31$216 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_23$seq.sv:32$217 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_24$seq.sv:32$218 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_25$seq.sv:33$219 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_26$seq.sv:33$220 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_27$seq.sv:34$221 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_28$seq.sv:34$222 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_29$seq.sv:35$223 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_30$seq.sv:35$224 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_31$seq.sv:35$225 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_32$seq.sv:36$226 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_33$seq.sv:36$227 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_34$seq.sv:37$228 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="_-____-____-________").$verific$equal_35$seq.sv:37$229 ($eq).
Removed top 3 bits (of 32) from wire seq(seq="_-____-____-________").position.
Removed top 27 bits (of 32) from port A of cell seq(seq="__--___-_____--_____").$verific$sub_3$seq.sv:10$281 ($sub).
Removed top 3 bits (of 32) from port Y of cell seq(seq="__--___-_____--_____").$verific$sub_3$seq.sv:10$281 ($sub).
Removed top 3 bits (of 32) from port B of cell seq(seq="__--___-_____--_____").$verific$sub_3$seq.sv:10$281 ($sub).
Removed top 865 bits (of 1024) from port A of cell seq(seq="__--___-_____--_____").$verific$shift_right_4$seq.sv:11$282 ($shr).
Removed top 1016 bits (of 1024) from port Y of cell seq(seq="__--___-_____--_____").$verific$shift_right_4$seq.sv:11$282 ($shr).
Removed top 31 bits (of 32) from port B of cell seq(seq="__--___-_____--_____").$verific$add_6$seq.sv:14$284 ($add).
Removed top 2 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_8$seq.sv:20$285 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_9$seq.sv:20$286 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_10$seq.sv:21$287 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_11$seq.sv:22$288 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_12$seq.sv:23$289 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_13$seq.sv:24$290 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_14$seq.sv:25$291 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_15$seq.sv:26$292 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_16$seq.sv:27$293 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_17$seq.sv:28$294 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_18$seq.sv:29$295 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_19$seq.sv:30$296 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_20$seq.sv:30$297 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_21$seq.sv:31$298 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_22$seq.sv:31$299 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_23$seq.sv:32$300 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_24$seq.sv:32$301 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_25$seq.sv:33$302 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_26$seq.sv:33$303 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_27$seq.sv:34$304 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_28$seq.sv:34$305 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_29$seq.sv:35$306 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_30$seq.sv:35$307 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_31$seq.sv:35$308 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_32$seq.sv:36$309 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_33$seq.sv:36$310 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_34$seq.sv:37$311 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="__--___-_____--_____").$verific$equal_35$seq.sv:37$312 ($eq).
Removed top 3 bits (of 32) from wire seq(seq="__--___-_____--_____").position.
Removed top 27 bits (of 32) from port A of cell seq(seq="____-__________-____").$verific$sub_3$seq.sv:10$364 ($sub).
Removed top 3 bits (of 32) from port Y of cell seq(seq="____-__________-____").$verific$sub_3$seq.sv:10$364 ($sub).
Removed top 3 bits (of 32) from port B of cell seq(seq="____-__________-____").$verific$sub_3$seq.sv:10$364 ($sub).
Removed top 865 bits (of 1024) from port A of cell seq(seq="____-__________-____").$verific$shift_right_4$seq.sv:11$365 ($shr).
Removed top 1016 bits (of 1024) from port Y of cell seq(seq="____-__________-____").$verific$shift_right_4$seq.sv:11$365 ($shr).
Removed top 31 bits (of 32) from port B of cell seq(seq="____-__________-____").$verific$add_6$seq.sv:14$367 ($add).
Removed top 2 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_8$seq.sv:20$368 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_9$seq.sv:20$369 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_10$seq.sv:21$370 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_11$seq.sv:22$371 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_12$seq.sv:23$372 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_13$seq.sv:24$373 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_14$seq.sv:25$374 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_15$seq.sv:26$375 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_16$seq.sv:27$376 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_17$seq.sv:28$377 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_18$seq.sv:29$378 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_19$seq.sv:30$379 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_20$seq.sv:30$380 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_21$seq.sv:31$381 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_22$seq.sv:31$382 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_23$seq.sv:32$383 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_24$seq.sv:32$384 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_25$seq.sv:33$385 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_26$seq.sv:33$386 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_27$seq.sv:34$387 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_28$seq.sv:34$388 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_29$seq.sv:35$389 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_30$seq.sv:35$390 ($eq).
Removed top 2 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_31$seq.sv:35$391 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_32$seq.sv:36$392 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_33$seq.sv:36$393 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_34$seq.sv:37$394 ($eq).
Removed top 1 bits (of 8) from port B of cell seq(seq="____-__________-____").$verific$equal_35$seq.sv:37$395 ($eq).
Removed top 3 bits (of 32) from wire seq(seq="____-__________-____").position.

3.8. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo_03_consecutive..
Finding unused cells or wires in module \seq(seq="-_______-___________")..
Finding unused cells or wires in module \seq(seq="_-____-____-________")..
Finding unused cells or wires in module \seq(seq="__--___-_____--_____")..
Finding unused cells or wires in module \seq(seq="____-__________-____")..
Removed 0 unused cells and 8 unused wires.
<suppressed ~4 debug messages>

3.10. Executing MEMORY_COLLECT pass (generating $mem cells).

3.11. Executing OPT pass (performing simple optimizations).

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo_03_consecutive.
Optimizing module seq(seq="-_______-___________").
Optimizing module seq(seq="_-____-____-________").
Optimizing module seq(seq="__--___-_____--_____").
Optimizing module seq(seq="____-__________-____").

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\demo_03_consecutive'.
Finding identical cells in module `\seq(seq="-_______-___________")'.
Finding identical cells in module `\seq(seq="_-____-____-________")'.
Finding identical cells in module `\seq(seq="__--___-_____--_____")'.
Finding identical cells in module `\seq(seq="____-__________-____")'.
Removed a total of 0 cells.

3.11.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo_03_consecutive..
Finding unused cells or wires in module \seq(seq="-_______-___________")..
Finding unused cells or wires in module \seq(seq="_-____-____-________")..
Finding unused cells or wires in module \seq(seq="__--___-_____--_____")..
Finding unused cells or wires in module \seq(seq="____-__________-____")..

3.11.5. Finished fast OPT passes.

3.12. Printing statistics.

=== demo_03_consecutive ===

   Number of wires:                 23
   Number of wire bits:             31
   Number of public wires:           5
   Number of public wire bits:       5
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 19
     $adff                           5
     $assert                         1
     $dff                            1
     $eq                             6
     $not                            1
     $reduce_or                      1
     seq(seq="-_______-___________")      1
     seq(seq="_-____-____-________")      1
     seq(seq="__--___-_____--_____")      1
     seq(seq="____-__________-____")      1

=== seq(seq="-_______-___________") ===

   Number of wires:                 47
   Number of wire bits:            147
   Number of public wires:           5
   Number of public wire bits:      74
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 46
     $add                            1
     $dff                            1
     $eq                            28
     $mux                            2
     $not                            1
     $pmux                           4
     $reduce_or                      7
     $shr                            1
     $sub                            1

=== seq(seq="_-____-____-________") ===

   Number of wires:                 47
   Number of wire bits:            147
   Number of public wires:           5
   Number of public wire bits:      74
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 46
     $add                            1
     $dff                            1
     $eq                            28
     $mux                            2
     $not                            1
     $pmux                           4
     $reduce_or                      7
     $shr                            1
     $sub                            1

=== seq(seq="__--___-_____--_____") ===

   Number of wires:                 47
   Number of wire bits:            147
   Number of public wires:           5
   Number of public wire bits:      74
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 46
     $add                            1
     $dff                            1
     $eq                            28
     $mux                            2
     $not                            1
     $pmux                           4
     $reduce_or                      7
     $shr                            1
     $sub                            1

=== seq(seq="____-__________-____") ===

   Number of wires:                 47
   Number of wire bits:            147
   Number of public wires:           5
   Number of public wire bits:      74
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 46
     $add                            1
     $dff                            1
     $eq                            28
     $mux                            2
     $not                            1
     $pmux                           4
     $reduce_or                      7
     $shr                            1
     $sub                            1

=== design hierarchy ===

   demo_03_consecutive               1
     seq(seq="-_______-___________")      1
     seq(seq="_-____-____-________")      1
     seq(seq="__--___-_____--_____")      1
     seq(seq="____-__________-____")      1

   Number of wires:                211
   Number of wire bits:            619
   Number of public wires:          25
   Number of public wire bits:     301
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                199
     $add                            4
     $adff                           5
     $assert                         1
     $dff                            5
     $eq                           118
     $mux                            8
     $not                            5
     $pmux                          16
     $reduce_or                     29
     $shr                            4
     $sub                            4

3.13. Executing CHECK pass (checking for obvious problems).
checking module demo_03_consecutive..
checking module seq(seq="-_______-___________")..
checking module seq(seq="_-____-____-________")..
checking module seq(seq="__--___-_____--_____")..
checking module seq(seq="____-__________-____")..
found and reported 0 problems.

4. Executing MEMORY_NORDFF pass (extracting $dff cells from $mem).

5. Executing ASYNC2SYNC pass.
Replacing demo_03_consecutive.$auto$verificsva.cc:1796:import$72 ($adff): ARST=\reset, D=$auto$rtlil.cc:1869:Not$67, Q=$auto$verificsva.cc:1794:import$70
Replacing demo_03_consecutive.$auto$verificsva.cc:1797:import$73 ($adff): ARST=\reset, D=$auto$rtlil.cc:1873:ReduceOr$65, Q=$auto$verificsva.cc:1795:import$71
Replacing demo_03_consecutive.$auto$verificsva.cc:362:getAccept$46 ($adff): ARST=\reset, D=$auto$rtlil.cc:1899:And$41, Q=$auto$verificsva.cc:293:getAccept$35
Replacing demo_03_consecutive.$auto$verificsva.cc:710:getFirstAcceptReject$62 ($adff): ARST=\reset, D=$auto$rtlil.cc:1907:Eq$53, Q=$auto$verificsva.cc:667:getFirstAcceptReject$50
Replacing demo_03_consecutive.$auto$verificsva.cc:710:getFirstAcceptReject$63 ($adff): ARST=\reset, D=$auto$rtlil.cc:1907:Eq$57, Q=$auto$verificsva.cc:667:getFirstAcceptReject$51

6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo_03_consecutive..
Finding unused cells or wires in module \seq(seq="-_______-___________")..
Finding unused cells or wires in module \seq(seq="_-____-____-________")..
Finding unused cells or wires in module \seq(seq="__--___-_____--_____")..
Finding unused cells or wires in module \seq(seq="____-__________-____")..

7. Executing SETUNDEF pass (replace undef values with defined constants).

8. Executing OPT pass (performing simple optimizations).

8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module demo_03_consecutive.
Optimizing module seq(seq="-_______-___________").
Optimizing module seq(seq="_-____-____-________").
Optimizing module seq(seq="__--___-_____--_____").
Optimizing module seq(seq="____-__________-____").

8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\demo_03_consecutive'.
Finding identical cells in module `\seq(seq="-_______-___________")'.
Finding identical cells in module `\seq(seq="_-____-____-________")'.
Finding identical cells in module `\seq(seq="__--___-_____--_____")'.
Finding identical cells in module `\seq(seq="____-__________-____")'.
Removed a total of 0 cells.

8.3. Executing OPT_RMDFF pass (remove dff with constant values).

8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \demo_03_consecutive..
Finding unused cells or wires in module \seq(seq="-_______-___________")..
Finding unused cells or wires in module \seq(seq="_-____-____-________")..
Finding unused cells or wires in module \seq(seq="__--___-_____--_____")..
Finding unused cells or wires in module \seq(seq="____-__________-____")..

8.5. Finished fast OPT passes.

9. Executing CHECK pass (checking for obvious problems).
checking module demo_03_consecutive..
checking module seq(seq="-_______-___________")..
checking module seq(seq="_-____-____-________")..
checking module seq(seq="__--___-_____--_____")..
checking module seq(seq="____-__________-____")..
found and reported 0 problems.

10. Executing HIERARCHY pass (managing design hierarchy).

10.1. Analyzing design hierarchy..
Top module:  \demo_03_consecutive
Used module:     \seq(seq="_-____-____-________")
Used module:     \seq(seq="__--___-_____--_____")
Used module:     \seq(seq="____-__________-____")
Used module:     \seq(seq="-_______-___________")

10.2. Analyzing design hierarchy..
Top module:  \demo_03_consecutive
Used module:     \seq(seq="_-____-____-________")
Used module:     \seq(seq="__--___-_____--_____")
Used module:     \seq(seq="____-__________-____")
Used module:     \seq(seq="-_______-___________")
Removed 0 unused modules.
Module demo_03_consecutive directly or indirectly contains formal properties -> setting "keep" attribute.

11. Executing ILANG backend.
Output filename: ../model/design.il

Warnings: 9 unique messages, 12 total
End of script. Logfile hash: 86b8873916, CPU: user 0.27s system 0.00s, MEM: 33.96 MB peak
Yosys 0.9+1706 (git sha1 c903246, clang 3.8.0-2ubuntu4 -fPIC -Os)
Time spent: 29% 2x hierarchy (0 sec), 20% 7x opt_clean (0 sec), ...
